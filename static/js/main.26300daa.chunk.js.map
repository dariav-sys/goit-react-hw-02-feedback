{"version":3,"sources":["components/section/Section.js","components/statistics/notification/Notification.js","components/statistics/Statistics.js","components/feedbackOptions/FeedbackOptions.js","App.js","index.js","components/statistics/notification/Notification.module.css","components/feedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","className","styles","feedback","Notification","message","Statistics","good","neutral","bad","total","positiveFeedbackPercent","FeedbackOptions","options","onLeaveFeedback","map","option","index","type","button","name","onClick","charAt","toUpperCase","slice","App","state","leaveFeedback","event","feedbackValue","target","setState","prevState","this","Math","floor","countTotalFeedback","Object","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAiBeA,EAZC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACI,yBAASC,UAAWC,IAAOC,SAA3B,SACI,6BAAKH,O,gBCIFI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGJ,UAAWC,IAAOG,QAArB,SAA+BA,KCsBzBC,EAvBI,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,wBAC/C,OAAOD,EAAQ,EACb,qCACE,4CACA,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UAGF,cAAC,EAAD,CAAcN,QAAQ,kC,gBCcXO,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,EAAQC,GACpB,OACE,wBAEEC,KAAK,SACLjB,UAAWC,IAAOiB,OAClBC,KAAMJ,EACNK,QAASP,EALX,SAOGE,EAAOM,OAAO,GAAGC,cAAgBP,EAAOQ,MAAM,IAN1CP,SCwCFQ,E,4MA3CbC,MAAQ,CACRnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLkB,cAAgB,SAACC,GACf,IAAMC,EAAgBD,EAAME,OAAOV,KACnC,EAAKW,UAAS,SAAAC,GACZ,OAAO,eACJH,EAAgBG,EAAUH,GAAiB,O,wDAKlD,WAAqB,IAAD,EACaI,KAAKP,MAA5BnB,EADU,EACVA,KAAMC,EADI,EACJA,QACd,OAAOD,EAFW,EACKE,IACHD,I,6CAGtB,WACE,OAAO0B,KAAKC,MAAMF,KAAKP,MAAMnB,KAAO0B,KAAKG,qBAAuB,O,oBAGlE,WACE,IAAMvB,EAAUwB,OAAOC,KAAKL,KAAKP,OAD1B,EAEwBO,KAAKP,MAA5BnB,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IACvB,OACE,qCACE,cAAC,EAAD,CAAST,MAAM,oCACf,cAAC,EAAD,CAAiBa,QAASA,EAASC,gBAAkBmB,KAAKN,gBAC1D,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,KAAKG,qBACZzB,wBAAyBsB,KAAKM,2C,GArCtBC,a,YCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,sCCV1BC,EAAOC,QAAU,CAAC,QAAU,gC,kBCA5BD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.26300daa.chunk.js","sourcesContent":["import React from 'react'\nimport styles from \"./Section.module.css\";\nimport PropTypes from 'prop-types'\n\n\nconst Section = ({title}) => {\n    return (\n        <section className={styles.feedback}>\n            <h2>{title}</h2>            \n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,    \n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\"\n\nconst Notification = ({ message }) => {\n  return <p className={styles.message}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n}\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Notification from \"./notification/Notification.js\";\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedbackPercent }) => {\n  return total > 0 ? (\n    <>\n      <h3>Statistics</h3>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positiveFeedbackPercent}%</p>\n    </>\n  ) : (\n    <Notification message=\"No feedback yet to report...\" />\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedbackPercent: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport styles from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option, index) => {\n        return (\n          <button\n            key={index}\n            type=\"button\"\n            className={styles.button}\n            name={option}\n            onClick={onLeaveFeedback}\n          >\n            {option.charAt(0).toUpperCase() + option.slice(1)}\n          </button>\n        );\n      })}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\n    \n}\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport Section from './components/section/Section.js';\nimport Statistics from \"./components/statistics/Statistics.js\";\nimport FeedbackOptions from \"./components/feedbackOptions/FeedbackOptions.js\";\n\n\nclass App extends Component {\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n  }\n\n  leaveFeedback = (event) => {\n    const feedbackValue = event.target.name;\n    this.setState(prevState => {\n      return {\n        [feedbackValue]: prevState[feedbackValue] + 1,\n      }\n    })\n  }\n\n  countTotalFeedback(){\n    const { good, neutral, bad } = this.state;\n    return good + bad + neutral;\n  }\n\n  countPositiveFeedbackPercentage(){\n    return Math.floor(this.state.good / this.countTotalFeedback() * 100);\n  }\n\n  render() {\n    const options = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please provide your feedback :)\" />\n        <FeedbackOptions options={options} onLeaveFeedback={ this.leaveFeedback}/>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positiveFeedbackPercent={this.countPositiveFeedbackPercentage() }/>\n        \n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__9a63C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2liEd\"};"],"sourceRoot":""}